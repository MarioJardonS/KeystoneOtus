phy_maiz <- transform_sample_counts(phy_maiz , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz, ordination = meta_ord , color = "Etapa")
plot_pcoa_muestras
#ggsave("./maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
metadata_maiz <- read.csv("../../data/metadata/fastp_metadat.csv" , colClasses = "character")
metadata_maiz <- metadata_maiz[ which(metadata_maiz$Cultivo == "Maiz") ,]
metadata_maiz <- metadata_maiz[ , c("ID" , "Etapa_fenologica" , "Origen")]
for (i in 1:dim(metadata_maiz)[1]){
metadata_maiz[i , "ID"] <- make.names(metadata_maiz[i , "ID"])
}
metadata_maiz <- metadata_maiz[which(is.element(metadata_maiz[ , "ID"], colnames(otus_centrales[[3]])) ) ,  ]
etapa <- data.frame( ID = metadata_maiz[ , "ID"], Phenology =  metadata_maiz [ , "Etapa_fenologica"] , Estado = metadata_maiz[ , "Origen"],row.names = metadata_maiz[ , "ID"])
metadata_maiz <- read.csv("../../data/metadata/fastp_metadat.csv" , colClasses = "character")
metadata_maiz <- metadata_maiz[ which(metadata_maiz$Cultivo == "Maiz") ,]
metadata_maiz <- metadata_maiz[ , c("ID" , "Etapa_fenologica" , "Origen")]
for (i in 1:dim(metadata_maiz)[1]){
metadata_maiz[i , "ID"] <- make.names(metadata_maiz[i , "ID"])
}
metadata_maiz <- metadata_maiz[which(is.element(metadata_maiz[ , "ID"], colnames(otus_centrales[[3]])) ) ,  ]
etapa <- data.frame( ID = metadata_maiz[ , "ID"], Phenology =  metadata_maiz [ , "Etapa_fenologica"] , Estado = metadata_maiz[ , "Origen"],row.names = metadata_maiz[ , "ID"])
etapa$Phenology <- c(rep("Formacion de espiga" , 4) , rep("Production" , 2))
etapa <- sample_data(etapa)
o_table_key_maiz <- otu_table(otus_centrales[[3]][1:(dim(otus_centrales[[3]])[1]-1) , 1:(dim(otus_centrales[[3]])[2]-4) ] , taxa_are_rows = TRUE)
t_table_key_maiz <- tax_table(taxa_centrales[[3]])
row.names(t_table_key_maiz@.Data) <- row.names(taxa_centrales[[3]])
o_table_maiz <- otu_table(data[[3]], taxa_are_rows = TRUE)
phy_maiz <- phyloseq(otu_table = o_table_maiz , sample_data = etapa)
phy_maiz <- transform_sample_counts(phy_maiz , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz, ordination = meta_ord , color = "Etapa")
plot_pcoa_muestras
#ggsave("./maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_maiz <- phyloseq(otu_table = o_table_maiz , sample_data = etapa)
phy_maiz <- transform_sample_counts(phy_maiz , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
#ggsave("./maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_maiz <- phyloseq(otu_table = o_table_maiz , sample_data = etapa)
phy_maiz <- transform_sample_counts(phy_maiz , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
ggsave("maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_maiz_key <- phyloseq(otu_table = o_table_key_maiz , tax_table = t_table_key_maiz , sample_data = etapa)
phy_maiz_key <- transform_sample_counts(phy_maiz_key , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz_key , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz_key, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
#ggsave("./maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_maiz_key <- phyloseq(otu_table = o_table_key_maiz , tax_table = t_table_key_maiz , sample_data = etapa)
phy_maiz_key <- transform_sample_counts(phy_maiz_key , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz_key , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz_key, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
ggsave("maiz_pcoa_key_otus.png" , plot_pcoa_muestras , device = "png")
clave_glom <- tax_glom(phy_maiz_key, taxrank = 'ta3')
clave_df <- psmelt(clave_glom)
colnames(clave_df)[9] <- "Phylum"
library(RColorBrewer)
library(ggplot2)
clave_df$Phylum <- as.factor(clave_df$Phylum)
phylum_colors_rel<- colorRampPalette(brewer.pal(8,"Dark2")) (length(levels(clave_df$Phylum)))
relative_plot <- ggplot(data=clave_df, aes(x=Sample, y=Abundance, fill=Phylum))+
geom_bar(aes(), stat="identity", position="stack")+
scale_fill_manual(values = phylum_colors_rel)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#absolute_plot |
relative_plot
#ggsave("phyla_key_tomate.png", relative_plot ,device = "png")
clave_glom <- tax_glom(phy_maiz_key, taxrank = 'ta3')
clave_df <- psmelt(clave_glom)
colnames(clave_df)[9] <- "Phylum"
library(RColorBrewer)
library(ggplot2)
clave_df$Phylum <- as.factor(clave_df$Phylum)
phylum_colors_rel<- colorRampPalette(brewer.pal(8,"Dark2")) (length(levels(clave_df$Phylum)))
relative_plot <- ggplot(data=clave_df, aes(x=Sample, y=Abundance, fill=Phylum))+
geom_bar(aes(), stat="identity", position="stack")+
scale_fill_manual(values = phylum_colors_rel)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#absolute_plot |
relative_plot
ggsave("phyla_key_maiz.png", relative_plot ,device = "png")
clave_glom <- tax_glom(phy_maiz_key, taxrank = 'ta7')
clave_df <- psmelt(clave_glom)
abundance_g <- c()
for (i in 1:length(levels(clave_df$ta7))){
which_i <- which(as.vector(clave_df$ta7) == levels(clave_df$ta7)[i])
#print(which_i)
sum_i <- sum(as.vector(clave_df[which_i,]$Abundance))
abundance_g <- c(abundance_g , sum_i)
}
genero_abundante <- which(abundance_g > summary(abundance_g)["1st Qu."] )
genero_abundante <- levels(clave_df$ta7)[genero_abundante]
ta7_ab <- c()
for (i in 1:dim(clave_df)[1]){
if (is.element(as.vector(clave_df$ta7)[i] , genero_abundante )){
ta7_ab <- c(ta7_ab , as.vector(clave_df$ta7)[i]   )
} else {
ta7_ab <- c(ta7_ab , "g__")
}
}
clave_df$ta7_ab <- ta7_ab
clave_df$ta7_ab <- as.factor(ta7_ab)
phylum_colors_rel<- colorRampPalette(brewer.pal(8,"Dark2")) (length(levels(clave_df$ta7_ab)))
relative_plot <- ggplot(data=clave_df, aes(x=Sample, y=Abundance, fill=ta7_ab))+
geom_bar(aes(), stat="identity", position="stack")+
scale_fill_manual(values = phylum_colors_rel)
#absolute_plot |
relative_plot
clave_glom <- tax_glom(phy_maiz_key, taxrank = 'ta7')
clave_df <- psmelt(clave_glom)
colnames(clave_df)[13] <- "Genera"
colnames(clave_df)[13] <- "Genus"
clave_glom <- tax_glom(phy_maiz_key, taxrank = 'ta7')
clave_df <- psmelt(clave_glom)
colnames(clave_df)[13] <- "Genus"
library(RColorBrewer)
library(ggplot2)
clave_df$Genus <- as.factor(clave_df$Genus)
phylum_colors_rel<- colorRampPalette(brewer.pal(8,"Dark2")) (length(levels(clave_df$Genus)))
relative_plot <- ggplot(data=clave_df, aes(x=Sample, y=Abundance, fill=Genus))+
geom_bar(aes(), stat="identity", position="stack")+
scale_fill_manual(values = phylum_colors_rel)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#absolute_plot |
relative_plot
#ggsave("phyla_key_maiz.png", relative_plot ,device = "png")
clave_glom <- tax_glom(phy_maiz_key, taxrank = 'ta7')
clave_df <- psmelt(clave_glom)
colnames(clave_df)[13] <- "Genus"
library(RColorBrewer)
library(ggplot2)
clave_df$Genus <- as.factor(clave_df$Genus)
phylum_colors_rel<- colorRampPalette(brewer.pal(8,"Dark2")) (length(levels(clave_df$Genus)))
relative_plot <- ggplot(data=clave_df, aes(x=Sample, y=Abundance, fill=Genus))+
geom_bar(aes(), stat="identity", position="stack")+
scale_fill_manual(values = phylum_colors_rel)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#absolute_plot |
relative_plot
ggsave("genera_key_maiz.png", relative_plot ,device = "png")
key_not_key <- c()
for (i in 1:dim(phy_maiz@otu_table@.Data)[1]){
if (is.element( row.names(phy_maiz@otu_table@.Data)[i]   , row.names(phy_maiz_key@otu_table@.Data)  )   ){
key_not_key <- c(key_not_key , "key")
} else {
key_not_key <- c(key_not_key , "not_key")
}
}
keys_vs_median <- phy_maiz@otu_table@.Data[which(key_not_key == "key") , ]
Medians <- c()
means <- c()
for (i in 1:dim(phy_maiz@otu_table@.Data)[2]){
Medians <- c(medians , median(phy_maiz@otu_table@.Data[, i]))
}
keys_vs_median <- phy_maiz@otu_table@.Data[which(key_not_key == "key") , ]
Medians <- c()
means <- c()
for (i in 1:dim(phy_maiz@otu_table@.Data)[2]){
Medians <- c(Medians , median(phy_maiz@otu_table@.Data[, i]))
}
keys_vs_median <- rbind(Medians , keys_vs_median)
#keys_vs_median <- rbind(keys_vs_median , means)
keys_vs_median <-  psmelt(otu_table(keys_vs_median  , taxa_are_rows = TRUE))
#medians <- psmelt(otu_table(as.data.frame(medians) , taxa_are_rows = FALSE))
plot <- ggplot(keys_vs_median , aes(x = Sample , y = Abundance , col = OTU , group = OTU))  + geom_line( ) + facet_wrap(~OTU)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
#ggsave("abundance_chile_key_otus_medians.png" , plot ,device = "png")
#ggplot(, aes(x = Sample , y = Abundance , color = OTU))
keys_vs_median <- phy_maiz@otu_table@.Data[which(key_not_key == "key") , ]
Medians <- c()
means <- c()
for (i in 1:dim(phy_maiz@otu_table@.Data)[2]){
Medians <- c(Medians , median(phy_maiz@otu_table@.Data[, i]))
means <- c(means , mean(phy_maiz@otu_table@.Data[, i]))
}
keys_vs_median <- rbind(Medians , keys_vs_median)
keys_vs_median <- rbind(keys_vs_median , means)
keys_vs_median <-  psmelt(otu_table(keys_vs_median  , taxa_are_rows = TRUE))
#medians <- psmelt(otu_table(as.data.frame(medians) , taxa_are_rows = FALSE))
plot <- ggplot(keys_vs_median , aes(x = Sample , y = Abundance , col = OTU , group = OTU))  + geom_line( ) + facet_wrap(~OTU)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
#ggsave("abundance_chile_key_otus_medians.png" , plot ,device = "png")
#ggplot(, aes(x = Sample , y = Abundance , color = OTU))
keys_vs_median <- phy_maiz@otu_table@.Data[which(key_not_key == "key") , ]
Medians <- c()
Means <- c()
for (i in 1:dim(phy_maiz@otu_table@.Data)[2]){
Medians <- c(Medians , median(phy_maiz@otu_table@.Data[, i]))
Means <- c(Means , mean(phy_maiz@otu_table@.Data[, i]))
}
keys_vs_median <- rbind(Medians , keys_vs_median)
keys_vs_median <- rbind(keys_vs_median , Means)
keys_vs_median <-  psmelt(otu_table(keys_vs_median  , taxa_are_rows = TRUE))
#medians <- psmelt(otu_table(as.data.frame(medians) , taxa_are_rows = FALSE))
plot <- ggplot(keys_vs_median , aes(x = Sample , y = Abundance , col = OTU , group = OTU))  + geom_line( ) + facet_wrap(~OTU)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
#ggsave("abundance_chile_key_otus_medians.png" , plot ,device = "png")
#ggplot(, aes(x = Sample , y = Abundance , color = OTU))
plot <- ggplot(keys_vs_median , aes(x = Sample , y = Abundance , col = OTU , group = OTU))  + geom_line( ) + facet_wrap(~OTU)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
ggsave("abundance_maiz_key_otus_medians.png" , plot ,device = "png")
#ggplot(, aes(x = Sample , y = Abundance , color = OTU))
key_vs_no_key <-  psmelt(phy_maiz@otu_table)
key_not_key <- c()
for (i in 1:dim(key_vs_no_key)[1]){
if (is.element( key_vs_no_key[i, "OTU"]   , row.names(phy_maiz_key@otu_table@.Data)  )   ){
key_not_key <- c(key_not_key , "Keystone")
} else {
key_not_key <- c(key_not_key , "Not keystone")
}
}
key_vs_no_key <- cbind(key_vs_no_key , key_not_key)
colnames(key_vs_no_key)[4] <- c("Type")
#medians <- psmelt(otu_table(as.data.frame(medians) , taxa_are_rows = FALSE))
plot <- ggplot(key_vs_no_key , aes(x = Sample , y= Abundance , color = Type  , group = Type ))+ #geom_dotplot(binaxis='y', stackdir='center') +
stat_summary(fun.data="mean_se", fun.args = list(mult=1),
geom="crossbar", width=0.5) +
stat_summary(fun="median", fun.args = list(mult=1),
geom="line", width=0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
#  geom_errorbar(aes(ymin=Abundance-sd, ymax=Abundance+sd), width=.2,
#                position=position_dodge(0.05))
#ggsave("mean_median_key_vs_not_key_chile.png" , plot , device = "png")
plot <- ggplot(key_vs_no_key , aes(x = Sample , y= Abundance , color = Type  , group = Type ))+ #geom_dotplot(binaxis='y', stackdir='center') +
stat_summary(fun.data="mean_se", fun.args = list(mult=1),
geom="crossbar", width=0.5) +
stat_summary(fun="median", fun.args = list(mult=1),
geom="line", width=0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot
#  geom_errorbar(aes(ymin=Abundance-sd, ymax=Abundance+sd), width=.2,
#                position=position_dodge(0.05))
ggsave("mean_median_key_vs_not_key_maiz.png" , plot , device = "png")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!require(vegan)) install.packages('vegan')
library(vegan)
if (!require(igraph)) install.packages('igraph')
library(igraph)
if (!require(apcluster)) install.packages('apcluster')
library(apcluster)
if (!require(plyr)) install.packages('plyr')
library(plyr)
if (!require(stringr)) install.packages('stringr')
library(stringr)
if (!require(phyloseq)) install.packages('phyloseq')
library(phyloseq)
if (!require(UpSetR)) install.packages('UpSetR')
library(UpSetR)
muestras <- c("chile", "tomate" , "maiz")
rizosfera_chile <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_chile.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosfera_tomate <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosfera_maiz <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_maiz.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosferas <- list( rizosfera_chile , rizosfera_tomate , rizosfera_maiz )
red_chile <- read.csv("../../data/networks/chile_species_raw_network.csv")
red_tomate <- read.csv("../../data/networks/tomate_species_raw_network.csv")
red_maiz <- read.csv("../../data/networks/maiz_species_raw_network.csv")
redes <- list(red_chile , red_tomate , red_maiz)
otus_centrales_chile <- read.csv("../central_otus/reporte_chile1.csv" , row.names = 1 )
otus_centrales_tomate <- read.csv("../central_otus/reporte_tomate1.csv" , row.names = 1 )
otus_centrales_maiz <- read.csv("../central_otus/reporte_maiz1.csv" , row.names = 1 )
otus_centrales <- list(otus_centrales_chile , otus_centrales_tomate , otus_centrales_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:(dim(otus_centrales[[i]])[2]-4)) {
col_j <- make.names(colnames(otus_centrales[[i]])[j])
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(otus_centrales[[i]]) <- c(coln_i , colnames(otus_centrales[[i]])[(length(colnames(otus_centrales[[i]]))-3):length(colnames(otus_centrales[[i]]))])
}
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.table("../../data/tables/table.from_tomate.txt" , row.names = 1, header = TRUE , sep = "" )
data_maiz <- read.table("../../data/tables/table.from_maiz.txt" , row.names = 1, header = TRUE , sep = "" )
data <- list( data_chile , data_tomate , data_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:dim(data[[i]])[2]) {
col_j <- colnames(data[[i]])[j]
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(data[[i]]) <- coln_i
}
metadata_maiz <- read.csv("../../data/metadata/fastp_metadat.csv" , colClasses = "character")
metadata_maiz <- metadata_maiz[ which(metadata_maiz$Cultivo == "Maiz") ,]
metadata_maiz <- metadata_maiz[ , c("ID" , "Etapa_fenologica" , "Origen")]
for (i in 1:dim(metadata_maiz)[1]){
metadata_maiz[i , "ID"] <- make.names(metadata_maiz[i , "ID"])
}
metadata_maiz <- metadata_maiz[which(is.element(metadata_maiz[ , "ID"], colnames(otus_centrales[[3]])) ) ,  ]
etapa <- data.frame( ID = metadata_maiz[ , "ID"], Phenology =  metadata_maiz [ , "Etapa_fenologica"] , Estado = metadata_maiz[ , "Origen"],row.names = metadata_maiz[ , "ID"])
etapa$Phenology <- c(rep("Formacion de espiga" , 4) , rep("Production" , 2))
etapa <- sample_data(etapa)
o_table_key_maiz <- otu_table(otus_centrales[[3]][1:(dim(otus_centrales[[3]])[1]-1) , 1:(dim(otus_centrales[[3]])[2]-4) ] , taxa_are_rows = TRUE)
t_table_key_maiz <- tax_table(taxa_centrales[[3]])
taxa_centrales <- list()
for (i in 1:3){
taxa_centrales[[i]] <- rizosferas[[i]][ intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ) ,]
print( paste0( "Se obtuvieron "  , length(intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ))  , " OTUs (bacterias) centrales en las muestras de " , muestras[i] ) )
write.csv( taxa_centrales[[i]] ,  paste0("taxonomy_keystone_otus_", muestras[i] , ".csv"))
}
o_table_key_maiz <- otu_table(otus_centrales[[3]][1:(dim(otus_centrales[[3]])[1]-1) , 1:(dim(otus_centrales[[3]])[2]-4) ] , taxa_are_rows = TRUE)
t_table_key_maiz <- tax_table(taxa_centrales[[3]])
row.names(t_table_key_maiz@.Data) <- row.names(taxa_centrales[[3]])
o_table_maiz <- otu_table(data[[3]], taxa_are_rows = TRUE)
phy_maiz <- phyloseq(otu_table = o_table_maiz , sample_data = etapa)
phy_maiz <- transform_sample_counts(phy_maiz , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
ggsave("maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
library(ggplot2)
phy_maiz <- phyloseq(otu_table = o_table_maiz , sample_data = etapa)
phy_maiz <- transform_sample_counts(phy_maiz , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
ggsave("maiz_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_maiz_key <- phyloseq(otu_table = o_table_key_maiz , tax_table = t_table_key_maiz , sample_data = etapa)
phy_maiz_key <- transform_sample_counts(phy_maiz_key , function(x) x / sum(x) )
meta_ord <- ordinate( phy_maiz_key , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_maiz_key, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
ggsave("maiz_pcoa_key_otus.png" , plot_pcoa_muestras , device = "png")
key_vs_no_key <-  psmelt(phy_maiz@otu_table)
key_not_key <- c()
for (i in 1:dim(key_vs_no_key)[1]){
if (is.element( key_vs_no_key[i, "OTU"]   , row.names(phy_maiz_key@otu_table@.Data)  )   ){
key_not_key <- c(key_not_key , "Keystone")
} else {
key_not_key <- c(key_not_key , "Not keystone")
}
}
medias <- c()
medianas <- c()
se <- c()
for (i in row.names(taxa_centrales[[3]])){
medias <- c(medias , mean(phy_maiz@otu_table@.Data[i , ] ))
medianas <- c(medianas , median(phy_maiz@otu_table@.Data[i , ] ))
se <- c(se , mean_se(phy_maiz@otu_table@.Data[i , ])[ ,"ymax" ]- mean_se(phy_maiz@otu_table@.Data[i , ])[ ,"y" ] )
}
tabla_tomate <- data.frame( "OTU" = taxa_centrales[[3]][ , "V8"] ,  "Mean relative abundance" = medias , "Median relative abundance" = medianas, "Standard error" = se  , row.names = row.names(taxa_centrales[[3]]) )
xtable::xtable(tabla_tomate , caption = "Keystone OTUs of textit{Zea mays}" , digits = 8)
medias <- c()
medianas <- c()
se <- c()
for (i in row.names(taxa_centrales[[3]])){
medias <- c(medias , mean(phy_maiz@otu_table@.Data[i , ] ))
medianas <- c(medianas , median(phy_maiz@otu_table@.Data[i , ] ))
se <- c(se , mean_se(phy_maiz@otu_table@.Data[i , ])[ ,"ymax" ]- mean_se(phy_maiz@otu_table@.Data[i , ])[ ,"y" ] )
}
tabla_tomate <- data.frame( "OTU" = taxa_centrales[[3]][ , "V9"] ,  "Mean relative abundance" = medias , "Median relative abundance" = medianas, "Standard error" = se  , row.names = row.names(taxa_centrales[[3]]) )
xtable::xtable(tabla_tomate , caption = "Keystone OTUs of textit{Zea mays}" , digits = 8)
medias <- c()
medianas <- c()
se <- c()
for (i in row.names(taxa_centrales[[3]])){
medias <- c(medias , mean(phy_maiz@otu_table@.Data[i , ] ))
medianas <- c(medianas , median(phy_maiz@otu_table@.Data[i , ] ))
se <- c(se , mean_se(phy_maiz@otu_table@.Data[i , ])[ ,"ymax" ]- mean_se(phy_maiz@otu_table@.Data[i , ])[ ,"y" ] )
}
tabla_tomate <- data.frame( "OTU" = taxa_centrales[[3]][ , "V8"] ,  "Mean relative abundance" = medias , "Median relative abundance" = medianas, "Standard error" = se  , row.names = row.names(taxa_centrales[[3]]) )
xtable::xtable(tabla_tomate , caption = "Keystone OTUs of textit{Zea mays}" , digits = 8)
dim(data_tomate)
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.table("../../data/tables/table.from_tomate.txt" , row.names = 1, header = TRUE , sep = "" )
data_maiz <- read.table("../../data/tables/table.from_maiz.txt" , row.names = 1, header = TRUE , sep = "" )
data <- list( data_chile , data_tomate , data_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:dim(data[[i]])[2]) {
col_j <- colnames(data[[i]])[j]
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(data[[i]]) <- coln_i
}
head(data[[2]])
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.csv("../../data/tables/tomate_desarrollo.csv" , row.names = 1, header = TRUE , sep = "" )
data_maiz <- read.table("../../data/tables/table.from_maiz.txt" , row.names = 1, header = TRUE , sep = "" )
data <- list( data_chile , data_tomate , data_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:dim(data[[i]])[2]) {
col_j <- colnames(data[[i]])[j]
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(data[[i]]) <- coln_i
}
data[[2]]
head(data[[2]])
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.csv("../../data/tables/tomate_desarrollo.csv" , row.names = 1, header = FALSE , sep = "" )
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.csv("../../data/tables/tomate_desarrollo.csv" , row.names = 1, header = TRUE , sep = "" )
data_maiz <- read.table("../../data/tables/table.from_maiz.txt" , row.names = 1, header = TRUE , sep = "" )
data <- list( data_chile , data_tomate , data_maiz)
head(data[[2]])
data_tomate_desarrollo <- read.csv("../../data/tables/tomate_desarrollo.csv" , row.names = 1, header = TRUE )
medias <- c()
medianas <- c()
for (i in 1:dim(data_tomate_desarrollo)[2]){
medias <- c(medias , mean(data_tomate_desarrollo[ , i]))
medianas <- c(medianas , median(data_tomate_desarrollo[ , i]))
}
data_tomate_desarrollo <- data_tomate_desarrollo[ row.names(otus_centrales_tomate2[[1]]),]
head(data_tomate_desarrollo)
library(phyloseq)
metadata_chile <- read.csv("../../data/metadata/fastp_metadat.csv" , colClasses = "character")
metadata_chile <- metadata_chile[ which(metadata_chile$Cultivo == "Chile") ,]
metadata_chile <- metadata_chile[ , c("ID" , "Etapa_fenologica" , "Origen")]
for (i in 1:dim(metadata_chile)[1]){
metadata_chile[i , "ID"] <- make.names(metadata_chile[i , "ID"])
}
metadata_chile <- metadata_chile[which(is.element(metadata_chile[ , "ID"], colnames(otus_centrales[[1]])) ) ,  ]
otus_centrales_chile <- read.csv("../central_otus/reporte_chile1.csv" , row.names = 1 )
otus_centrales_tomate <- read.csv("../central_otus/reporte_tomate1.csv" , row.names = 1 )
otus_centrales_maiz <- read.csv("../central_otus/reporte_maiz1.csv" , row.names = 1 )
otus_centrales <- list(otus_centrales_chile , otus_centrales_tomate , otus_centrales_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:(dim(otus_centrales[[i]])[2]-4)) {
col_j <- make.names(colnames(otus_centrales[[i]])[j])
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(otus_centrales[[i]]) <- c(coln_i , colnames(otus_centrales[[i]])[(length(colnames(otus_centrales[[i]]))-3):length(colnames(otus_centrales[[i]]))])
}
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.csv("../../data/tables/tomate_desarrollo.csv" , row.names = 1, header = TRUE , sep = "" )
data_maiz <- read.table("../../data/tables/table.from_maiz.txt" , row.names = 1, header = TRUE , sep = "" )
data <- list( data_chile , data_tomate , data_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:dim(data[[i]])[2]) {
col_j <- colnames(data[[i]])[j]
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(data[[i]]) <- coln_i
}
taxa_centrales <- list()
for (i in 1:3){
taxa_centrales[[i]] <- rizosferas[[i]][ intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ) ,]
print( paste0( "Se obtuvieron "  , length(intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ))  , " OTUs (bacterias) centrales en las muestras de " , muestras[i] ) )
write.csv( taxa_centrales[[i]] ,  paste0("taxonomy_keystone_otus_", muestras[i] , ".csv"))
}
rizosfera_chile <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_chile.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosfera_tomate <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosfera_maiz <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_maiz.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosferas <- list( rizosfera_chile , rizosfera_tomate , rizosfera_maiz )
taxa_centrales <- list()
for (i in 1:3){
taxa_centrales[[i]] <- rizosferas[[i]][ intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ) ,]
print( paste0( "Se obtuvieron "  , length(intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ))  , " OTUs (bacterias) centrales en las muestras de " , muestras[i] ) )
write.csv( taxa_centrales[[i]] ,  paste0("taxonomy_keystone_otus_", muestras[i] , ".csv"))
}
muestras <- c("chile", "tomate" , "maiz")
taxa_centrales <- list()
for (i in 1:3){
taxa_centrales[[i]] <- rizosferas[[i]][ intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ) ,]
print( paste0( "Se obtuvieron "  , length(intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ))  , " OTUs (bacterias) centrales en las muestras de " , muestras[i] ) )
write.csv( taxa_centrales[[i]] ,  paste0("taxonomy_keystone_otus_", muestras[i] , ".csv"))
}
metadata_chile <- read.csv("../../data/metadata/fastp_metadat.csv" , colClasses = "character")
metadata_chile <- metadata_chile[ which(metadata_chile$Cultivo == "Chile") ,]
metadata_chile <- metadata_chile[ , c("ID" , "Etapa_fenologica" , "Origen")]
for (i in 1:dim(metadata_chile)[1]){
metadata_chile[i , "ID"] <- make.names(metadata_chile[i , "ID"])
}
metadata_chile <- metadata_chile[which(is.element(metadata_chile[ , "ID"], colnames(otus_centrales[[1]])) ) ,  ]
etapa <- data.frame( ID = metadata_chile[ , "ID"], Phenology =  metadata_chile [ , "Etapa_fenologica"] , Estado = metadata_chile[ , "Origen"],row.names = metadata_chile[ , "ID"])
etapa$Phenology <- c(rep("Developement" , 4) , "Plantation" , NA )
etapa <- sample_data(etapa)
o_table_key_chile <- otu_table(otus_centrales[[1]][1:(dim(otus_centrales[[1]])[1]-1) ,  intersect(row.names(etapa) , colnames(otus_centrales[[1]]))  ] , taxa_are_rows = TRUE)
t_table_key_chile <- tax_table(taxa_centrales[[1]])
row.names(t_table_key_chile@.Data) <- row.names(taxa_centrales[[1]])
o_table_chile <- otu_table(data[[1]][,  intersect(row.names(etapa) , colnames(otus_centrales[[1]])) ], taxa_are_rows = TRUE)
phy_chile <- phyloseq(otu_table = o_table_chile , sample_data = etapa)
phy_chile <- transform_sample_counts(phy_chile , function(x) x / sum(x) )
meta_ord <- ordinate( phy_chile , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_chile, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
#ggsave("./chile_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_chile_key <- phyloseq(otu_table = o_table_key_chile , tax_table = t_table_key_chile , sample_data = etapa)
phy_chile_key <- transform_sample_counts(phy_chile_key , function(x) x / sum(x) )
meta_ord <- ordinate( phy_chile_key , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_chile_key, ordination = meta_ord , color = "Phenology")
plot_pcoa_muestras
#ggsave("./chile__clave_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
substr("abc" , 2 , 3)
setwd("./mario/redes_correlacion_coocurrencia")
taxonomia <- read.csv("./data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv")
taxonomia <- read.csv("./data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , row.names = 1)
taxonomia[ "42837" ,  ]
taxonomia
taxonomia <- read.csv("./data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , row.names = 1 , sep = ";")
taxonomia[ "42837" ,  ]
head(taxonomia)
taxonomia <- read.csv("./data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , row.names = 1 , sep = ";" , heade)
taxonomia <- read.csv("./data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , row.names = 1 , sep = ";" , header = FALSE)
taxonomia[ "42837" ,  ]
taxonomia[ "42837" , "V9" ]
taxonomia[ "42837" , "V8" ]
taxonomia[ "290174" , "V8" ]
taxonomia[ "290174" ,  ]
